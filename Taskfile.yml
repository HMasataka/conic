version: "3"

tasks:
  signal:
    desc: Run signal
    cmd: go run cmd/signal/main.go {{.CLI_ARGS}}

  p2p:
    desc: Run P2P demo client
    cmd: go run cmd/p2p/main.go {{.CLI_ARGS}}

  p2p-offer:
    desc: Run P2P demo client as offer side
    cmd: go run cmd/p2p/main.go -role=offer

  p2p-answer:
    desc: Run P2P demo client as answer side
    cmd: go run cmd/p2p/main.go -role=answer

  audio:
    desc: Run audio demo with Opus codec
    cmd: go run cmd/audio/main.go {{.CLI_ARGS}}

  audio-offer:
    desc: Run audio demo as offer side
    cmd: go run cmd/audio/main.go -role=offer

  audio-answer:
    desc: Run audio demo as answer side
    cmd: go run cmd/audio/main.go -role=answer

  datachannel:
    desc: Run datachannel demo
    cmd: go run cmd/datachannel/main.go {{.CLI_ARGS}}

  generate-audio:
    desc: Generate sample WAV file for testing
    cmd: go run cmd/generate-audio/main.go {{.CLI_ARGS}}

  build:
    desc: Build all applications
    cmd: go build ./...

  test:
    desc: Run tests
    cmd: go test ./...

  fmt:
    desc: Format code
    cmd: go fmt ./...

  vet:
    desc: Vet code for issues
    cmd: go vet ./...

  tidy:
    desc: Tidy dependencies
    cmd: go mod tidy

  clean:
    desc: Clean build artifacts
    cmd: go clean ./...

  dev-server:
    desc: Run server with hot reload (requires air)
    cmd: air -c .air.toml --build.cmd "go build -o ./tmp/server cmd/server/main.go" --build.bin "./tmp/server"
    preconditions:
      - sh: which air
        msg: "air is not installed. Install with: go install github.com/air-verse/air@latest"

  install-tools:
    desc: Install development tools
    cmds:
      - go install github.com/air-verse/air@latest

  default:
    desc: Show available tasks
    cmd: task --list
